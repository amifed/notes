(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{514:function(s,t,a){"use strict";a.r(t);var r=a(18),e=Object(r.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"web-安全"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#web-安全"}},[s._v("#")]),s._v(" Web 安全")]),s._v(" "),a("h2",{attrs:{id:"xss-跨站脚本攻击"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-跨站脚本攻击"}},[s._v("#")]),s._v(" XSS 跨站脚本攻击")]),s._v(" "),a("blockquote",[a("p",[s._v("跨站脚本攻击（Cross-Site Scripting），为了不和层叠样式表（Cascading Style Sheets, CSS）的缩写混淆，故将跨站脚本攻击缩写为 XSS，是一种代码注入攻击。XSS 攻击通常指的是利用网页的漏洞，攻击者通过巧妙的方法注入 XSS 代码到网页，因为浏览器无法分辨哪些脚本是可信的，导致 XSS 脚本被执行。XSS 脚本通常能够窃取用户数据并发送到攻击者的网站，或者冒充用户，调用目标网站接口并执行攻击者指定的操作。")])]),s._v(" "),a("h3",{attrs:{id:"xss-攻击类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#xss-攻击类型"}},[s._v("#")]),s._v(" XSS 攻击类型")]),s._v(" "),a("h4",{attrs:{id:"反射性-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射性-xss"}},[s._v("#")]),s._v(" 反射性 XSS")]),s._v(" "),a("ul",[a("li",[s._v("XSS 脚本来自当前 HTTP 请求")]),s._v(" "),a("li",[s._v("当服务器在 HTTP 请求中接收数据并将该数据拼接在 HTML 中返回时")])]),s._v(" "),a("h4",{attrs:{id:"存储型-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#存储型-xss"}},[s._v("#")]),s._v(" 存储型 XSS")]),s._v(" "),a("ul",[a("li",[s._v("XSS 脚本来自服务器数据库中")]),s._v(" "),a("li",[s._v("攻击者将恶意代码提交到目标网络的数据库中，普通用户访问网站时服务器将恶意代码返回，浏览器默认执行")])]),s._v(" "),a("h4",{attrs:{id:"dom-型-xss"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dom-型-xss"}},[s._v("#")]),s._v(" DOM 型 XSS")]),s._v(" "),a("p",[s._v("该漏洞存在于客户端代码，与服务器无关")]),s._v(" "),a("ul",[a("li",[s._v("类似反射型，区别在于 DOM 型 XSS 并不会和后台进行交互，前端直接将 URL 中的数据不做处理并动态插入到 HTML 中，是纯粹的前端安全问题，要做防御也只能在客户端上进行防御")])]),s._v(" "),a("p",[s._v("对于一切用户的输入、输出、客户端的输出内容视为不可信，对用户输入进行验证，对 script 标签或其他敏感符号转义或编码")]),s._v(" "),a("h2",{attrs:{id:"csrf-跨站请求伪造"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#csrf-跨站请求伪造"}},[s._v("#")]),s._v(" CSRF 跨站请求伪造")]),s._v(" "),a("blockquote",[a("p",[s._v("跨站请求伪造 CSRF（Cross-site request forgery），也被称为“One Click Attack”或者 Session Riding，通常缩写为 CSRF 或者 XSRF，是一种对网站的恶意利用。尽管听起来像跨站脚本（XSS），但它与 XSS 非常不同，XSS 利用站点内的信任用户，而 CSRF 则通过伪装来自受信任用户的请求来利用受信任的网站。与 XSS 攻击相比，CSRF 攻击往往不大流行（因此对其进行防范的资源也相当稀少）和难以防范，所以被认为比 XSS 更具危险性。但往往同 XSS 一同作案！")])]),s._v(" "),a("ul",[a("li",[s._v("Http Referer，利用 HTTP 头中的 Referer 判断请求来源是否合法。")]),s._v(" "),a("li",[s._v("HTTP 头中自定义属性加入 Token")])]),s._v(" "),a("h2",{attrs:{id:"点击劫持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#点击劫持"}},[s._v("#")]),s._v(" 点击劫持")]),s._v(" "),a("blockquote",[a("p",[s._v("点击劫持，英文名 clickjacking，也叫 UI 覆盖攻击，攻击者会利用一个或多个透明或不透明的层来诱骗用户支持点击按钮的操作，而实际的点击是用户看不到的一个按钮，从而达到在用户不知情的情况下实施攻击。")])]),s._v(" "),a("ul",[a("li",[s._v("顶层判断")])])])}),[],!1,null,null,null);t.default=e.exports}}]);